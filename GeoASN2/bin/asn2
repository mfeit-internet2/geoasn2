#!/usr/bin/python
#
# GeoIP2 ASN lookup for Splunk
#
#
# Input:  src_ip dest_ip      
# Output: src_asn dest_asn
#

#This is needed for Splunk to use 64bit Python Modules, ie maxminddb.  You also need to install the python for scientific computing for linux 64bit app from Splunkbase.  You need to copy over exec_anaconda.py from the app you install
import exec_anaconda
exec_anaconda.exec_anaconda()

import csv
import os
import sys

#you need to copy over the geoip2, ipaddress, and maxmind python modules to the Splunk python install
import geoip2.database

DATA_SET = "ASN"

#I'm certain there is a better way to do this, but it can't be relative.  I think there is a splunk variable that may be used here instead.
DB_PATH = "/opt/splunk/etc/apps/GeoASN2/data/GeoLite2-{1}.mmdb".format(
    os.path.dirname(sys.argv[0]),
    DATA_SET
    )

db = geoip2.database.Reader(DB_PATH)

csv_in = csv.reader(sys.stdin)
csv_out = csv.writer(sys.stdout)

# The first line is always the header.  Read that and generate tuples
# for source and destination IP and ASN.

header = csv_in.next()
field_index = dict((name, pos) for pos, name in enumerate(header))

pairs = []
for pair in [ "src", "dest" ]:
    try:
        pairs.append( tuple([
            field_index[pair + item] for item in "_ip", "_asn"
        ]) )
    except KeyError:
        # TODO: Burp out an error or die?
        pass


# Write the file, header line first.

csv_out.writerow(header)

for line in csv_in:

    for pair in pairs:
        try:
            ip_index, asn_index = pair
            response = db.asn(line[ip_index])
            line[asn_index] = response.autonomous_system_number
        except geoip2.errors.AddressNotFoundError:
            # Not there, don't care.
            pass

    # Write the row back no matter how it turned out.
    csv_out.writerow(line)
