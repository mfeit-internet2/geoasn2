#!/usr/bin/python
#
# GeoIP2 Country/ASN/Organization lookup for Splunk
#
#
# Input: clientip
# Output: client_country client_region client_city client_lat client_lon
#

import csv
import os
import sys

import geoip2.database

def db_path(dataset):
    return "{0}/data/GeoLite2-{1}.mmdb".format(
    os.path.dirname(sys.argv[0]), dataset)

city_db = geoip2.database.Reader(db_path("City"))

csv_in = csv.reader(sys.stdin)
csv_out = csv.writer(sys.stdout)


# The first line is always the header.
header = csv_in.next()

#
# Fields from the input.  These are required in this order
#

in_fields = [
        "clientip"
]

in_field_index = dict((name, pos) for pos, name in enumerate(header))

try:
    index_ip_in = in_field_index["clientip"]
except KeyError:
    sys.stderr.write("Input is missing clientip\n")
    exit(1)


#
# Fields in the output.
#

out_fields = [
    "clientip",
    "client_country",
    "client_region",
    "client_city",
    "client_lat",
    "client_lon"
]

out_field_index = dict((name, pos) for pos, name in enumerate(out_fields))


# Spit out the header line
csv_out.writerow(out_fields)


index_ip_in = in_field_index["clientip"]

index_ip_out = out_field_index["clientip"]
index_client_country_out = out_field_index["client_country"]
index_client_region_out = out_field_index["client_region"]
index_client_city_out = out_field_index["client_city"]
index_client_lat_out = out_field_index["client_lat"]
index_client_lon_out = out_field_index["client_lon"]

for line in csv_in:

    out = [""] * len(out_fields)

    ip = line[index_ip_in]
    out[out_field_index["clientip"]] = ip

    try:

        city_response = city_db.city(ip)

        out[index_client_country_out] = city_response.country.iso_code

        try:
            out[index_client_region_out] = city_response.subdivisions.most_specific.name
        except AttributeError:
            pass

        try:
            out[index_client_city_out] = city_response.city.name.encode("ascii", "replace")
        except AttributeError:
            pass

        try:
            out[index_client_lat_out] = city_response.location.latitude
            out[index_client_lon_out] = city_response.location.longitude
        except AttributeError:
            pass

    except (geoip2.errors.AddressNotFoundError):
        # Not there, don't care.
        pass

    # Write the row back no matter how it turned out.
    csv_out.writerow(out)
