#!/usr/bin/python
#
# GeoIP2 Country/ASN/Organization lookup for Splunk
#
#
# Input:  ip
# Output: country asn org
#

import csv
import os
import sys

import geoip2.database

def db_path(dataset):
    return "{0}/../data/maxmind/GeoLite2-{1}.mmdb".format(
    os.path.dirname(sys.argv[0]), dataset)


city_db = geoip2.database.Reader(db_path("City"))
asn_db = geoip2.database.Reader(db_path("ASN"))

csv_in = csv.reader(sys.stdin)
csv_out = csv.writer(sys.stdout)


# The first line is always the header.  Read that and generate tuples
# for source and destination IP and ASN.

header = csv_in.next()

#
# Fields from the input.  These are required in this order
#

in_fields = [
        "ip"
]

in_field_index = dict((name, pos) for pos, name in enumerate(header))

try:
    index_ip_in = in_field_index["ip"]
except KeyError:
    sys.stderr.write("Input is missing ip\n")
    exit(1)


#
# Fields in the output.
#

out_fields = [
    "ip",
    "country",
    "asn",
    "org"
]

out_field_index = dict((name, pos) for pos, name in enumerate(out_fields))


# Spit out the header line
csv_out.writerow(out_fields)

index_ip_out = out_field_index["ip"]
index_country_out = out_field_index["country"]
index_asn_out = out_field_index["asn"]
index_org_out = out_field_index["org"]

for line in csv_in:

    out = [""] * len(out_fields)

    ip = line[index_ip_in]
    out[out_field_index["ip"]] = ip

    try:
        city_response = city_db.city(ip)
        out[index_country_out] = city_response.country.iso_code
    except (KeyError, geoip2.errors.AddressNotFoundError):
        # Not there, don't care.
        pass

    try:
        asn_response = asn_db.asn(ip)
        out[index_asn_out] = asn_response.autonomous_system_number
        try:
            out[index_org_out] = asn_response.autonomous_system_organization.encode("ascii", "replace")
        except AttributeError:
            pass
    except (KeyError, geoip2.errors.AddressNotFoundError):
        # Not there, don't care.
        pass

    # Write the row back no matter how it turned out.
    csv_out.writerow(out)
